import type { GetServerSideProps } from 'next';
import Head from 'next/head';

import { getServerAuthSession } from '~/server/auth';
import MainLayout from '~/components/MainLayout';
import type { Session } from 'next-auth';
import type { NextPageWithLayout } from './_app';
import { createServerSideHelpers } from '@trpc/react-query/server';
import { appRouter } from '~/server/api/root';
import { createInnerTRPCContext } from '~/server/api/trpc';
import SuperJSON from 'superjson';

export const getServerSideProps: GetServerSideProps = async (ctx) => {
    const session = await getServerAuthSession(ctx);

    if (!session || !session.user.email) {
        return {
            redirect: {
                destination: '/login',
                permanent: false,
            },
        };
    }

    const helpers = createServerSideHelpers({
        router: appRouter,
        ctx: createInnerTRPCContext({ session }),
        transformer: SuperJSON,
    });

    const hasClinicAccess = await helpers.clinic.hasClinicAccess.fetch();

    if (!hasClinicAccess) {
        return {
            redirect: {
                destination: '/no-access',
                permanent: false,
            },
        };
    }

    return { props: { session } };
};

const HomePage: NextPageWithLayout<{ session: Session }> = () => {
    return (
        <>
            <Head>
                <title>Clinic Name Here</title>
                <meta name='description' content='Generated by create-t3-app' />
                <link rel='icon' href='/favicon.ico' />
            </Head>
            <div className='flex-1'>Main content</div>
        </>
    );
};

HomePage.getLayout = (page) => {
    return <MainLayout>{page}</MainLayout>;
};

export default HomePage;
